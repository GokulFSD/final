{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/eventsbar/eventsbar.component.css","webpack:///./src/app/eventsbar/eventsbar.component.html","webpack:///./src/app/eventsbar/eventsbar.component.ts","webpack:///./src/app/hospital-validator/hospital-validator.component.css","webpack:///./src/app/hospital-validator/hospital-validator.component.html","webpack:///./src/app/hospital-validator/hospital-validator.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/nhs/nhs.component.css","webpack:///./src/app/nhs/nhs.component.html","webpack:///./src/app/nhs/nhs.component.ts","webpack:///./src/app/page/page.component.html","webpack:///./src/app/page/page.component.sass","webpack:///./src/app/page/page.component.ts","webpack:///./src/app/resp/resp.component.css","webpack:///./src/app/resp/resp.component.html","webpack:///./src/app/resp/resp.component.ts","webpack:///./src/app/sawtooth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///util (ignored)","webpack:///util (ignored)?6d10","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/*Sample Code*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWJvdXQvYWJvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxlQUFlIiwiZmlsZSI6InNyYy9hcHAvYWJvdXQvYWJvdXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qU2FtcGxlIENvZGUqLyJdfQ== */\"","module.exports = \"<h3>PROJECT\\n  HYGIEIA:\\n</h3>\\n\\n<p>This project involves the use of permissioned blockchain Sawtooth under the hyperledger umbrella on the use case relating to healthcare in particular to that of Organ Donation. Health is the most important part of a person’s life and a such this project aims to introduce a permissioned blockchain into particular aspects of Organ Donation, in respect to an Organ donor list which is privacy protected and tamper proof in order to curb any exploitation and preserve privacy of members of Donor list,  also it helps in ordering a Recipient list wherein members are classified in a first come first serve basis and priority is set with voting of particular member nodes with the particular criteria set for voting and with a threshold set by the admin. The main aim is to match recipient and donors by traversing transactions.\\n</p>\\n<h4>Technologies Used</h4>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row text-center text-lg-left\\\">\\n<div class=\\\"col-lg-3 col-md-4 col-xs-6-inline\\\">\\n  <a href=\\\"#\\\" class=\\\"d-block mb-4 h-100\\\">\\n    <img class =\\\"img-fluid\\\" src=\\\"assets/images/d1.png\\\" width=\\\"200\\\" height=\\\"200\\\">\\n  </a>\\n</div>\\n<div class=\\\"col-lg-3 col-md-4 col-xs-6-inline\\\">\\n  <a href=\\\"#\\\" class=\\\"d-block mb-4 h-100\\\">\\n    <img class =\\\"img-fluid\\\" src=\\\"assets/images/node.png\\\" width=\\\"200\\\" height=\\\"200\\\">\\n  </a>\\n</div>\\n<div class=\\\"col-lg-3 col-md-4 col-xs-6-inline\\\">\\n  <a  href=\\\"#\\\" class=\\\"d-block mb-4 h-100\\\">\\n    <img class =\\\"img-fluid\\\" src=\\\"assets/images/ang.png\\\" width=\\\"200\\\" height=\\\"200\\\">\\n  </a>\\n</div>\\n<div class=\\\"col-lg-3 col-md-4 col-xs-6\\\">\\n  <a href=\\\"#\\\" class=\\\"d-block mb-4 h-100\\\">\\n    <img class =\\\"img-fluid\\\" src=\\\"assets/images/rest.jpg\\\" width=\\\"200\\\" height=\\\"200\\\">\\n  </a>\\n</div>\\n</div>\\n</div> \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageComponent } from './page/page.component';\nimport { RespComponent } from './resp/resp.component';\nimport { AboutComponent } from './about/about.component';\nimport { MainComponent } from './main/main.component';\nimport { NhsComponent } from './nhs/nhs.component';\nimport { EventsbarComponent } from './eventsbar/eventsbar.component';\nimport { HospitalValidatorComponent } from './hospital-validator/hospital-validator.component';\nconst routes: Routes = [\n  { path: '', component: MainComponent},\n  { path: 'home', component: PageComponent},\n  { path: 'resp', component: RespComponent},\n  { path: 'about', component: AboutComponent},\n  {path:'nhs',component:NhsComponent},\n  { path: 'events', component: EventsbarComponent},\n  {path:'hv',component:HospitalValidatorComponent}\n  \n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"/*Sample Code*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypTYW1wbGUgQ29kZSovIl19 */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n<app-nav></app-nav>\\n<router-outlet>\\n</router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hygeia';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule }   from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PageComponent } from './page/page.component';\nimport { RespComponent } from './resp/resp.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AboutComponent } from './about/about.component';\nimport { MainComponent } from './main/main.component';\nimport { NhsComponent } from './nhs/nhs.component';\nimport { EventsbarComponent } from './eventsbar/eventsbar.component';\nimport { HospitalValidatorComponent } from './hospital-validator/hospital-validator.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageComponent,\n    RespComponent,\n    NavComponent,\n    AboutComponent,\n    MainComponent,\n    NhsComponent,\n    EventsbarComponent,\n    HospitalValidatorComponent\n  \n  ],\n  imports: [\n    HttpClientModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"/*random comment*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXZlbnRzYmFyL2V2ZW50c2Jhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50c2Jhci9ldmVudHNiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qcmFuZG9tIGNvbW1lbnQqLyJdfQ== */\"","module.exports = \"<p>\\n  eventsbar works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eventsbar',\n  templateUrl: './eventsbar.component.html',\n  styleUrls: ['./eventsbar.component.css']\n})\nexport class EventsbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/*random comment*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9zcGl0YWwtdmFsaWRhdG9yL2hvc3BpdGFsLXZhbGlkYXRvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQiIsImZpbGUiOiJzcmMvYXBwL2hvc3BpdGFsLXZhbGlkYXRvci9ob3NwaXRhbC12YWxpZGF0b3IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qcmFuZG9tIGNvbW1lbnQqLyJdfQ== */\"","module.exports = \"<h3>Hosital_validator</h3>\\n\\n  \\n  <div>\\n    \\n          <legend>Hospital</legend>\\n          <p>Validate Organ Matching</p>\\n          <input type=\\\"text\\\" class=\\\"form-control-inline\\\">\\n          <i style=\\\"font-size:24px\\\" class=\\\"fa\\\">&#xf101;</i>\\n          <input type=\\\"text\\\" class=\\\"form-control-inline\\\">\\n          <button class=\\\"btn btn btn-outline-success\\\" href=\\\"\\\"> accept</button>/\\n          <button class=\\\"btn btn btn-outline-success\\\" href=\\\"\\\">reject</button>\\n        \\n</div>\\n      \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hospital-validator',\n  templateUrl: './hospital-validator.component.html',\n  styleUrls: ['./hospital-validator.component.css']\n})\nexport class HospitalValidatorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img{\\n    display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0VBQ2pCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsV0FBVztDQUNaIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWd7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHdpZHRoOiA1MCU7XG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <img class =\\\"img-fluid\\\" src=\\\"assets/images/hygieia.png\\\" width=\\\"650\\\" height=\\\"650\\\" >\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"body {  padding: 5px; font-family: helvetica; font:15px;  }\\n.p1 { text-align: center; }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQVEsYUFBYSxDQUFDLHVCQUF1QixDQUFDLFVBQVUsR0FBRztBQUMzRCxNQUFNLG1CQUFtQixFQUFFIiwiZmlsZSI6InNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7ICBwYWRkaW5nOiA1cHg7IGZvbnQtZmFtaWx5OiBoZWx2ZXRpY2E7IGZvbnQ6MTVweDsgIH1cbi5wMSB7IHRleHQtYWxpZ246IGNlbnRlcjsgfSJdfQ== */\"","module.exports = \"\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark \\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink =\\\"\\\">  <legend>{{title}}\\n    </legend></a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li class=\\\"nav-item active\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home</a>\\n          </li>\\n\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" routerLink =\\\"about\\\">About</a>\\n  \\n             </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"home\\\">Donor</a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink =\\\"resp\\\">Recepient List</a>\\n\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink =\\\"nhs\\\">NHS</a>\\n\\n           </li>\\n        \\n        \\n       \\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" routerLink =\\\"hv\\\">Hospital_Val</a>\\n  \\n             </li>\\n             <li class=\\\"nav-item active\\\">\\n              <a class=\\\"nav-link\\\" routerLink =\\\"events\\\">Events</a>\\n    \\n               </li>\\n      </ul>\\n      <br/>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/*random comment*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmhzL25ocy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQiIsImZpbGUiOiJzcmMvYXBwL25ocy9uaHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qcmFuZG9tIGNvbW1lbnQqLyJdfQ== */\"","module.exports = \" <!-- <h3>Welcome to National Health Service</h3>\\n\\n <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"getList()\\\">FetchList</button>\\n</div> -->\\n<h3>Welcome to National Health Service</h3>\\n<form (ngSubmit)=addresser(f) #f=\\\"ngForm\\\">\\n  <label for=\\\"btype\\\">Blood Type</label>\\n <select class=\\\"form-control\\\" id=\\\"btype\\\" ngModel name=\\\"btype\\\" required>\\n   <option value=\\\"A+\\\">A+</option>\\n   <option value=\\\"A-\\\">A-</option>\\n   <option value=\\\"B-\\\">B-</option>\\n   <option value=\\\"B+\\\">B+</option>\\n   <option value=\\\"AB+\\\">AB+</option>\\n   <option value=\\\"AB-\\\">AB-</option>\\n   <option value=\\\"O-\\\">O-</option>\\n   <option value=\\\"O+\\\">O+</option>\\n </select>\\n <label for=\\\"otype\\\">Organ Type</label>\\n <select class=\\\"form-control\\\"  ngModel name=\\\"otype\\\" required>\\n   <option value=\\\"Lung\\\">Lung</option>\\n   <option value=\\\"Kidney\\\">Kidney</option>\\n   <option value=\\\"Liver\\\">Liver</option>\\n   <option value=\\\"Eye(corneas)\\\">Eye(corneas)</option>\\n   <option value=\\\"Larynx\\\">Larynx</option>\\n   <option value=\\\"Pancreas\\\">Pancreas</option>\\n   <option value=\\\"Intestine\\\">Intestine</option>\\n </select>\\n <label for=\\\"idproof\\\">Id Proof</label><br>\\n  <input ngModel name=\\\"idproof\\\" type=\\\"text\\\">\\n  <input type=\\\"submit\\\">\\n</form>\\n\\n\\n\\n <div *ngIf=\\\"state\\\">\\n   <p>Status : {{state.Status}}</p>\\n   <p>Transaction id : {{state.Txnid}}</p>\\n   <!-- <p>Txn Data  :{{stateDt}}</p> -->\\n   <b><p>Name:{{detailsList.ran}}</p>\\n   <p>Date of Birth:{{detailsList.dat}}</p>\\n   <p>Blood Type:{{detailsList.name}}</p>\\n   <p>Organ:{{detailsList.bty}}</p></b>\\n  \\n\\n </div>\\n\\n\\n<!-- <div class=\\\"form-group\\\">\\n   <label class=\\\"control-label col-sm-2\\\" id=\\\"btype\\\">Blood Type:</label> \\n  <div class=\\\"col-sm-10\\\"><legend>\\n          <select class=\\\"form-control\\\" id=\\\"btype\\\" #btype type=\\\"text\\\" name='btype' ngModel required>\\n            <option>A+</option>\\n            <option>A-</option>\\n            <option>B-</option>\\n            <option>B+</option>\\n            <option>AB+</option>\\n            <option>AB-</option>\\n            <option>O-</option>\\n            <option>O+</option>\\n          </select></legend>\\n          <br>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-5\\\" id=\\\"otype\\\">Organ to be recieved</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <legend>\\n        <select class=\\\"form-control\\\" id=\\\"otype\\\" #otype type=\\\"text\\\" name='otype' ngModel required>\\n            <option>Lung</option>\\n            <option>Kidney</option>\\n            <option>Liver</option>\\n            <option>Eye(corneas)</option>\\n            <option>Larynx</option>\\n            <option>Pancreas</option>\\n            <option>Intestine</option>\\n          </select></legend>\\n      </div>\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\">request</button> -->\\n  <!-- <div>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-7\\\">\\n              <legend>Organ Donor List</legend>\\n              <label for=\\\"address\\\"></label>\\n          <input type=\\\"text\\\" class=\\\"form-control-inline\\\">\\n          <input type=\\\"checkbox\\\"> \\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n                <label for=\\\"address\\\"></label>\\n            <input type=\\\"text\\\" class=\\\"form-control-inline\\\">\\n            <input type=\\\"checkbox\\\"> \\n              </div>\\n              <div class=\\\"col-md-7\\\">\\n                  <legend>Recipient List</legend>\\n                  <label for=\\\"address\\\"></label>\\n              <input type=\\\"text\\\" class=\\\"form-control-inline\\\">\\n              <input type=\\\"checkbox\\\"> \\n                </div>\\n                <div class=\\\"col-md-7\\\">\\n                    <label for=\\\"address\\\"></label>\\n                <input type=\\\"text\\\" class=\\\"form-control-inline\\\">\\n                <input type=\\\"checkbox\\\"> \\n                  </div> -->\\n            <!-- <div class=\\\"col-md-6\\\">\\n              <button class=\\\"btn btn-success\\\" href=\\\"\\\">match</button>\\n            </div>\\n          </div> -->\\n        <!-- </div>\\n          \\n          \\n        \\n</div> -->\\n      \"","import { Component, OnInit } from '@angular/core';\nimport { SawtoothService } from '../sawtooth.service';\n\nimport {Buffer} from 'buffer/';\n\n@Component({\n  selector: 'app-nhs',\n  templateUrl: './nhs.component.html',\n  styleUrls: ['./nhs.component.css']\n})\nexport class NhsComponent implements OnInit {\n  users=[];\n  clickMessage=\"\";\n  servicedata=\"\";\n  Arr;\n  public Num: SawtoothService;\n  numba:Array<0>;\n  detailsList\n  name\n  bty\n  oty\n  idp\n  dat\n  ran\n  nam\n  state\n  address\n\n  stateDt\n  \n//name of array you are calling from sawtoo.service is Data\n  constructor(private form:SawtoothService) { \n    \n    const nhs=\"NHS\"\n   \n  }\n  ngOnInit() {\n  }\n\n  addresser(f){\n    console.log(f.value)\n    this.address=this.form.getAddress(f.value.btype,f.value.otype,f.value.idproof,\"NHS\")\n    console.log(this.address)\n    this.getData()\n\n  }\n\n  getDecodedData(responseJSON): string {\n    const dataBytes = responseJSON.data;\n    const decodedData = new Buffer(dataBytes, 'base64').toString();\n    return decodedData;\n  }\n\n  \n\n  getData(){\n    \n    return this.form.getStateD(this.address)\n      .subscribe((resp)=>{\n        const dataString= JSON.stringify(resp)\n        const data= JSON.parse(dataString)\n        let stateDataEnc=data.data;\n        let stateDecoded= atob(stateDataEnc)\n        this.state=JSON.parse(stateDecoded)\n        console.log(\"bkp 0\")\n        const getStateURL = 'http://localhost:4200/api/transaction/'+ this.state.Txnid;\n        const fetchOptions = { method: 'GET' };\n        console.log(\"bkp 1\")\n        return this.form.getTxnD(this.state.Txnid)\n        .subscribe((response) => {\n          \n          const dt1=JSON.stringify(response)\n          const dt2=JSON.parse(dt1)\n          let dt3=dt2.data\n          let dt4=dt3.payload\n          this.stateDt=new Buffer(dt4,\"base64\").toString()\n          let Details=this.stateDt.split(',')\n\n        this.detailsList={\n            name:Details[0],\n            bty:Details[1],\n            oty:Details[2],\n            idp:Details[3],\n            dat:Details[4],\n            ran:Details[5],\n            nam:Details[6]\n          }\n          \n\n          console.log(\"Name is \"+this.stateDt)\n\n          console.log(\"batchlist null\",this.stateDt);\n          \n        })\n        /*.then((responseJson) => {\n          console.log(\"batchlist null2\");\n          this.stateDt= this.getDecodedData(responseJson)\n          console.log(\"bkp 3\")\n          \n        })\n        .catch((error) => {\n          console.error(error);\n        });*/\n        \n      },\n      (error)=>{\n        console.log(error)\n\n      })\n  }\n\n  \n\n  \n// log(){\n//   // this.numba['0']=[1,2,3];\n//   this.Num=this.Form.addrArray;\n//   // this.Num=this.Arr.toString;\n//   console.log(\"ARRAY\",this.Form.addrArray);\n//   // console.log(\"ARRAY2\",this.Arr);\n//   // console.log(\"ARRAY2\",this.numba);\n// }\n//   async getList(){\n//     const servDt =await this.Form.getListData();\n    \n\n//   }\n\n}\n\n\n\n\n\n// import { Component, OnInit } from '@angular/core';\n// import { SawtoothService } from '../sawtooth.service';\n\n// @Component({\n//   selector: 'app-nhs',\n//   templateUrl: './nhs.component.html',\n//   styleUrls: ['./nhs.component.css']\n// })\n// export class NhsComponent implements OnInit {\n//   users=[];\n//   clickMessage=\"\";\n//   servicedata=\"\";\n//   state;\n//   address;\n\n//   constructor(private form:SawtoothService) { \n//     console.log(\"Inside page component.ts\")\n//   }\n//   ngOnInit() {\n//   }\n//   // async addForm(btype:string,otype:string,Gender:string,idproof:string,date:string,Name:string){\n//   //  // event.preventDefault();\n \n//   //  this.clickMessage=\"Blood type:\"+btype+\"Organ type:\" +otype +\" Gender: \"+Gender + \" Registration Date:\"+date + \" Name:\" +Name ;\n//   //   const proc =\"NHS\"\n//   //   const action =\"add\"\n//   //   const servDt =await this.Form.sendData(btype,otype,Gender,idproof,date,Name,proc,action);\n    \n//   //   this.servicedata=\"htis is service dAatta\"+servDt;\n//   //   //+servDt.toString();\n    \n//   // }\n//   // async getList(){\n//   //   const servDt =await this.Form.getListData();\n//   // }\n//   addresser(f){\n//     console.log(f.value)\n//     this.address=this.form.getAddress(f.value.btype,f.value.otype,f.value.idproof,\"NHS\")\n//     console.log(this.address)\n//     this.getData()\n\n//   }\n\n//   getData(){\n    \n//     return this.form.getStateD(this.address)\n//       .subscribe((resp)=>{\n//         const dataString= JSON.stringify(resp)\n//         const data= JSON.parse(dataString)\n//         let stateDataEnc=data.data;\n//         let stateDecoded= atob(stateDataEnc)\n//         this.state=JSON.parse(stateDecoded)\n//       },\n//       (error)=>{\n//         console.log(error)\n\n//       })\n//   }\n\n  \n\n\n// }","module.exports = \"<!-- <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\n<script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script>\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\"> -->\\n<br/>\\n<br/><legend><p class=\\\"p1\\\">Enter Details of Donor</p></legend><br/>\\n<!-- <div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"getDnr()\\\">Submit</button>\\n</div> -->\\n<div class=\\\"container\\\">\\n\\n  <form  class=\\\"form\\\"  #f=\\\"ngForm\\\" >\\n    <div class=\\\"form-group\\\">\\n\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"name\\\">Name:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #Name type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"name\\\" name='Name' ngModel required pattern=\\\"^[a-zA-Z\\\\.]*$\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"Date\\\">Date of Birth:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #date type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"date\\\" placeholder=\\\"Date\\\" name='date' ngModel required>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"Gender\\\">Gender:</label>\\n      <div class=\\\"col-sm-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"Gender\\\" #Gender type=\\\"text\\\" name='Gender' ngModel required>\\n                <option>Male</option>\\n                <option>Female</option>\\n                <option>Other</option>\\n              </select>\\n              <br>\\n        </div>\\n      </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"btype\\\">Blood Type:</label>\\n      <div class=\\\"col-sm-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"btype\\\" #btype type=\\\"text\\\" name='btype' ngModel required>\\n                <option>A+</option>\\n                <option>A-</option>\\n                <option>B-</option>\\n                <option>B+</option>\\n                <option>AB+</option>\\n                <option>AB-</option>\\n                <option>O-</option>\\n                <option>O+</option>\\n              </select>\\n              <br>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-5\\\" for=\\\"otype\\\">Organ to be recieved</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <select class=\\\"form-control\\\" id=\\\"otype\\\" #otype type=\\\"text\\\" name='otype' ngModel required>\\n              <option>Lung</option>\\n              <option>Kidney</option>\\n              <option>Liver</option>\\n              <option>Eye(corneas)</option>\\n              <option>Larynx</option>\\n              <option>Pancreas</option>\\n              <option>Intestine</option>\\n            </select>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" id=\\\"idproof\\\">Enter Identity No:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input #idproof type=\\\"text\\\" ngModel required class=\\\"form-control\\\" id=\\\"idproof\\\" placeholder=\\\"enter government given identity proof (aadhar preferred)\\\" ngModel required maxlength=\\\"12\\\" >\\n   <small class=\\\"form-text text-muted\\\">Enter 12 digit Aadhar number</small>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" id=\\\"cno\\\">Enter Contact No:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cno\\\" placeholder=\\\"Contact Number\\\" name=\\\"tel\\\" ngModel required maxlength=\\\"10\\\" >\\n  <small class=\\\"form-text text-muted\\\">Enter 10 digit Phone number</small>      \\n  </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" id=\\\"cid\\\">Contact Info:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"textarea\\\" class=\\\"form-control\\\" id=\\\"cid\\\" placeholder=\\\"enter Contact information\\\" name=\\\"cid\\\" ngModel required>\\n        </div>\\n      </div>\\n      \\n      \\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\" (click)=\\\"addForm(btype.value,otype.value,Gender.value,idproof.value,date.value,Name.value)\\\">Submit</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n\"","module.exports = \"body {\\n  padding: 5px;\\n  font-family: helvetica;\\n  font: 15px; }\\n\\n.p1 {\\n  text-align: center; }\\n\\ninput.ng-invalid.ng-touched {\\n  border: 1px solid red; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2dva3VsL0Rvd25sb2Fkcy9sYWI0L2ZpbmFsX2VkaXQvcHJvamVjdF9oeWdpZWlhL2h5Z2VpYS9zcmMvYXBwL3BhZ2UvcGFnZS5jb21wb25lbnQuc2FzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFRLGFBQVk7RUFBRSx1QkFBc0I7RUFBRSxXQUFTLEVBQU07O0FBQzdEO0VBQU0sbUJBQWtCLEVBQUk7O0FBQzVCO0VBQTZCLHNCQUFzQixFQUFFIiwiZmlsZSI6InNyYy9hcHAvcGFnZS9wYWdlLmNvbXBvbmVudC5zYXNzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7ICBwYWRkaW5nOiA1cHg7IGZvbnQtZmFtaWx5OiBoZWx2ZXRpY2E7IGZvbnQ6MTVweDsgICB9O1xuLnAxIHsgdGV4dC1hbGlnbjogY2VudGVyOyB9O1xuaW5wdXQubmctaW52YWxpZC5uZy10b3VjaGVkeyBib3JkZXI6IDFweCBzb2xpZCByZWQgfTtcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SawtoothService } from '../sawtooth.service';\n\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.sass']\n})\nexport class PageComponent implements OnInit {\n  \n  users=[];\n  clickMessage=\"\";\n  servicedata=\"\";\n  \n\n  constructor(private Form:SawtoothService) { \n    console.log(\"Inside page component.ts\")\n  }\n  ngOnInit() {\n  }\n\n  async addForm(btype:string,otype:string,Gender:string,idproof:string,date:string,Name:string){\n   // event.preventDefault();\n \n   this.clickMessage=\"Blood type:\"+btype+\"Organ type:\" +otype +\" Gender: \"+Gender + \" Registration Date:\"+date + \" Name:\" +Name ;\n    const proc =\"NHS\"\n    const action =\"add\"\n    const servDt =await this.Form.sendData(btype,otype,Gender,idproof,date,Name,proc,action);\n    \n    this.servicedata=\"htis is service dAatta\"+servDt;\n    //+servDt.toString();\n    \n  }\n  /*\n  async getDnr(btype,otype){\n\n    const recpDt=await this.Form.sendToRestAPIForList(btype,otype);\n    console.log(\"Inside getRecp\")\n  }*/\n}\n","module.exports = \"body {  padding: 5px; font-family: helvetica; font:15px;   }\\n.p1 { text-align: center; }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzcC9yZXNwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxhQUFhLENBQUMsdUJBQXVCLENBQUMsVUFBVSxJQUFJO0FBQzVELE1BQU0sbUJBQW1CLEVBQUUiLCJmaWxlIjoic3JjL2FwcC9yZXNwL3Jlc3AuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkgeyAgcGFkZGluZzogNXB4OyBmb250LWZhbWlseTogaGVsdmV0aWNhOyBmb250OjE1cHg7ICAgfVxuLnAxIHsgdGV4dC1hbGlnbjogY2VudGVyOyB9Il19 */\"","module.exports = \"<!-- <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\n<script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script>\\n<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\"> -->\\n<br/>\\n<br/><legend><p class=\\\"p1\\\">Enter Details of Recipient</p></legend><br/>\\n<div class=\\\"container\\\">\\n\\n  <form  class=\\\"form\\\"  #f=\\\"ngForm\\\" >\\n    <div class=\\\"form-group\\\">\\n\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"name\\\">Name:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #Name type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"name\\\" name='Name' ngModel required pattern=\\\"^[a-zA-Z\\\\.]*$\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"Date\\\">Date of Birth:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input #date type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"date\\\" placeholder=\\\"Date\\\" name='date' ngModel required>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"Gender\\\">Gender:</label>\\n      <div class=\\\"col-sm-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"Gender\\\" #Gender type=\\\"text\\\" name='Gender' ngModel required>\\n                <option>Male</option>\\n                <option>Female</option>\\n                <option>Other</option>\\n              </select>\\n              <br>\\n        </div>\\n      </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" id=\\\"btype\\\">Blood Type:</label>\\n      <div class=\\\"col-sm-10\\\">\\n              <select class=\\\"form-control\\\" id=\\\"btype\\\" #btype type=\\\"text\\\" name='btype' ngModel required>\\n                <option>A+</option>\\n                <option>A-</option>\\n                <option>B-</option>\\n                <option>B+</option>\\n                <option>AB+</option>\\n                <option>AB-</option>\\n                <option>O-</option>\\n                <option>O+</option>\\n              </select>\\n              <br>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-5\\\" id=\\\"otype\\\">Organ to be recieved</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <select class=\\\"form-control\\\" id=\\\"otype\\\" #otype type=\\\"text\\\" name='otype' ngModel required>\\n              <option>Lung</option>\\n              <option>Kidney</option>\\n              <option>Liver</option>\\n              <option>Eye(corneas)</option>\\n              <option>Larynx</option>\\n              <option>Pancreas</option>\\n              <option>Intestine</option>\\n            </select>\\n        </div>\\n      </div>\\n\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" id=\\\"idproof\\\">Enter Identity No:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input #idproof type=\\\"number\\\" ngModel required class=\\\"form-control\\\" id=\\\"idproof\\\" placeholder=\\\"enter government given identity proof (aadhar preferred)\\\" ngModel required maxlength=\\\"12\\\" >\\n   <small class=\\\"form-text text-muted\\\">Enter 12 digit Aadhar number</small>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" id=\\\"cno\\\">Enter Contact No:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"cno\\\" placeholder=\\\"Contact Number\\\" name=\\\"tel\\\" ngModel required maxlength=\\\"10\\\" >\\n  <small class=\\\"form-text text-muted\\\">Enter 10 digit Phone number</small>      \\n  </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label col-sm-2\\\" id=\\\"cid\\\">Contact Info:</label>\\n        <div class=\\\"col-sm-10\\\">\\n          <input type=\\\"textarea\\\" class=\\\"form-control\\\" id=\\\"cid\\\" placeholder=\\\"enter Contact information\\\" name=\\\"cid\\\" ngModel required>\\n        </div>\\n      </div>\\n      \\n      \\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\" (click)=\\\"addForm(btype.value,otype.value,Gender.value,idproof.value,date.value,Name.value)\\\">Submit</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { SawtoothService } from '../sawtooth.service';\n\n@Component({\n  selector: 'app-resp',\n  templateUrl: './resp.component.html',\n  styleUrls: ['./resp.component.css']\n})\nexport class RespComponent implements OnInit {\n\n  users=[];\n  clickMessage=\"\";\n  servicedata=\"\";\n\n  constructor(private Form:SawtoothService) { \n    console.log(\"Inside page component.ts\")\n  }\n  ngOnInit() {\n  }\n  async addForm(btype:string,otype:string,Gender:string,idproof:string,date:string,Name:string){\n   // event.preventDefault();\n   \n   this.clickMessage=\"Blood type:\"+btype+\"Organ type:\" +otype +\" Gender: \"+Gender + \" Registration Date:\"+date + \" Name:\" +Name;\n   const reproc =\"resp\"\n   const action =\"add\"\n   const servDt =await this.Form.sendData(btype,otype,Gender,idproof,date,Name,reproc,action);\n    \n    this.servicedata=\"htis is service dAatta\"+servDt;\n    //+servDt.toString();\n    \n  }\n}","import { Injectable } from '@angular/core';\n\n\nimport { createHash } from 'crypto-browserify';\nimport * as protobuf  from \"sawtooth-sdk/protobuf\";\nimport { CryptoFactory, createContext } from \"sawtooth-sdk/signing\";\nimport * as Secp256k1PrivateKey from 'sawtooth-sdk/signing/secp256k1';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport {Buffer} from 'buffer/';\n\nimport { TextEncoder, TextDecoder} from \"text-encoding/lib/encoding\";\nimport { pipe } from '@angular/core/src/render3';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SawtoothService {\n\n  private Family_name='hygieia';\n  private Family_version='1.0';\n  private REST_API_BASE_URL='http://localhost:4200/api';\n\n  public address:any;\n  public publicKey:any;\n  public signer:any;\n  public addrNs:any;\n public addrArray:any;\n  \n    \n  constructor(private http:HttpClient) {}\n\n\n  private hash(v) {\n    return createHash('sha512').update(v).digest('hex');\n  }\n\n \n  \n\nprivate getTransactionHeaderBytes(inputAddressList, outputAddressList, payload): any {\n  const transactionHeaderBytes = protobuf.TransactionHeader.encode({\n    familyName: this.Family_name,\n    familyVersion: this.Family_version,\n    inputs: [this.addrNs,this.address],\n    outputs: [this.addrNs,this.address],\n    signerPublicKey: this.publicKey,\n    batcherPublicKey: this.publicKey,\n    dependencies: [],\n    payloadSha512: this.hash(payload),\n    nonce: (Math.random() * 1000).toString()\n  }).finish();\n\n  return transactionHeaderBytes;\n}\n\nprivate getTransaction(transactionHeaderBytes, payloadBytes): any {\n    const transaction = protobuf.Transaction.create({\n    header: transactionHeaderBytes,\n    headerSignature: this.signer.sign(transactionHeaderBytes),\n    payload: payloadBytes\n  });\n\n  return transaction;\n}\nprivate getBatchHeaderBytes(transactionSignaturesList): any {\n  console.log(\"Inside get BAtch list\");\n  const batchHeader = protobuf.BatchHeader.encode({\n    signerPublicKey: this.publicKey,\n    transactionIds: transactionSignaturesList\n  }).finish();\n\n  return batchHeader;\n}\n\nprivate getBatch(batchHeaderBytes, transactionsList): any {\n  const batch = protobuf.Batch.create({\n    header: batchHeaderBytes,\n    headerSignature: this.signer.sign(batchHeaderBytes),\n    transactions: transactionsList\n  });\n\n  return batch;\n}\n\nprivate getBatchListBytes(batchesList): any {\n  const batchListBytes = protobuf.BatchList.encode({\n    batches: batchesList\n  }).finish();\n\n  return batchListBytes;\n}\n\nprivate getBatchList(transactionsList) {\n  \n  const transactionSignatureList = transactionsList.map((tx) => tx.headerSignature);\n\n  // Create batch header\n  const batchHeader = this.getBatchHeaderBytes(transactionSignatureList);\n  // Create the batch\n  const batch = this.getBatch(batchHeader, transactionsList);\n  // Batch List\n  const batchList = this.getBatchListBytes([batch]);   \n\n      return batchList\n}\n\n/*-------END Creating transactions & batches-----------*/\n\n// Get state of address from rest api\nprivate async getState(address): Promise<any> {\n  const getStateURL = this.REST_API_BASE_URL + '/state/' + address;\n  const fetchOptions = { method: 'GET' };\n  return window.fetch(getStateURL, fetchOptions);\n}\n\nprivate getDecodedData(responseJSON): string {\n  const dataBytes = responseJSON.data;\n  const decodedData = new Buffer(dataBytes, 'base64').toString();\n  return decodedData;\n}\n\n\n  public async sendToRestAPI(batchListBytes) :Promise<any>{\n    if (batchListBytes == null) {\n          //to match the donor n receipient we need txnid for detzai\n      // GET state\n      return this.getState(this.address)\n        .then((response) => {\n          console.log(\"batchlist null\");\n          return response.json();\n        })\n        .then((responseJson) => {\n          console.log(\"batchlist null2\");\n          return this.getDecodedData(responseJson)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n    else {\n\n      // POST batch list\n      console.log(\"calling postBatchList\");\n      return this.postBatchList(batchListBytes)\n    }\n  }\n  \n  // Post batch list to rest api\n  private postBatchList(batchListBytes): Promise<any> {\n    const postBatchListURL = this.REST_API_BASE_URL + '/batches';\n    const fetchOptions = {\n      method: 'POST',\n      body: batchListBytes,\n      headers: {\n        'Content-Type': 'application/octet-stream'\n      }\n    }\n    return window.fetch(postBatchListURL, fetchOptions);\n  }\n\n\n  private getAddressList(addr){\n      return this.getState(addr)\n      .then((response) => {\n        console.log(\"address null\");\n        return response.json();\n      })\n      .then((responseJson) => {\n        console.log(\"address null2\");\n        return this.getDecodedData(responseJson)\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  public async getListData(){\n    // return this.getState(this.address)\n    // .then((response) => {\n    //   console.log(\"batchlist null\");\n    //   return response.json();\n    // })\n    // .then((responseJson) => {\n    //   console.log(\"batchlist null2\");\n    //   return this.getDecodedData(responseJson)\n    // })\n    // .catch((error) => {\n    //   console.error(error);\n    // });\n    try{\n      this.address =  this.hash(\"hygieia\").substr(0, 70) ;\n      \n      //var addrArray=this.getAddressList(this.address);\n\n      return this.getState(this.address)\n      .then((resp) => {\n        console.log(\"sendToRestAPI response\", resp);\n        var addrArray=resp.toString().split(',')\n       \n        console.log(\"hello\",addrArray);\n        \n         /*for (var i in addrArray){\n          return this.getAddressList(addrArray[i])\n         }*/\n\n         return addrArray; \n      })\n      .catch((error) => {\n        console.log(\"error here\", error);\n      })\n\n/*\n     \n\n      // Send the batch to REST API\n   \n      \n      \n    */\n    \n      }\n    catch (e) {\n      console.log(\"Error in getting list  details\", e);\n      return \"ERROR\";\n  }\n  }\n  superAddress(superAddress: any): any {\n    throw new Error(\"Method not implemented.\");\n  }\n\n\n\n  public async sendData(btype,otype,gender,idproof,date,name,proc,action) {\n    \n    try{\n\n    const context = createContext('secp256k1');\n    // Creating a random private key \n    const privateKey = context.newRandomPrivateKey();\n    this.signer = new CryptoFactory(context).newSigner(privateKey);\n    this.publicKey=this.signer.getPublicKey().asHex();\n    \n    // Encode the payload\n    /*const payload = this.getEncodedData(action, values);*/    \n    const data = btype + \",\" + otype+\",\"+ gender+ \",\" + idproof+ \",\"+ date +\",\"+ name +\",\" +proc+ \",\"+ action;\n    console.log(data+\"data\");\n   \n    const encData=new TextEncoder('utf8').encode(data);\n\n    this.address =  this.hash(\"hygieia\").substr(0, 70) ;\n    this.addrNs=this.hash(\"hygieia\").substr(0,6)\n    console.log(\"ThisAddress\"+this.address)\n\n    const transactionHeader = this.getTransactionHeaderBytes([this.addrNs], [this.address], encData);\n    console.log(\"After txn header\")\n    // Create transaction\n    const transaction = this.getTransaction(transactionHeader, encData);\n    console.log(\"After transaction\")\n    // Transaction list\n    const transactionsList = [transaction];\n    console.log(\"After transactionsList\")\n   // Create a list of batches. In our case, one batch only in the list\n   const batchList = this.getBatchList(transactionsList);\n   console.log(\"After batchList\")\n\n   // Send the batch to REST API\n    await this.sendToRestAPI(batchList)\n   .then((resp) => {\n     console.log(\"sendToRestAPI response\", resp);\n   })\n   .catch((error) => {\n     console.log(\"error here\", error);\n   })\n    return batchList;\n  }\n    catch (e) {\n      console.log(\"Error in reading the key details\", e);\n      return \"ERROR\";\n  }\n  \n  \n/*\n    \n    const transactionsList = this.getTransactionsList(payload);\n    const batchList = this.getBatchList(transactionsList);\n\n    // Send the batch to REST API\n    await this.sendToRestAPI(batchList)\n      .then((resp) => {\n        console.log(\"response here\", resp);\n      })\n      .catch((error) => {\n        console.log(\"error here\", error);\n      })*/\n  }\n\n /* public async sendToRestAPIForList(btype,otype):Promise<any>{\n    if (batchListBytes == null) {\n          //to match the donor n receipient we need txnid for detzai\n      // GET state\n      return this.getState(this.address)\n        .then((response) => {\n          console.log(\"batchlist null\");\n          return response.json();\n        })\n        .then((responseJson) => {\n          console.log(\"batchlist null2\");\n          return this.getDecodedData(responseJson)\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n    else {\n\n      // POST batch list\n      console.log(\"calling postBatchList\");\n      return this.postBatchList(batchListBytes)\n    }\n  }*/\n\n  getAddress(btype,otype,idproof,proc){\n\n    let address=this.hash('hygieia').substr(0,6)+\n                this.hash(proc).substr(0,16)+\n                this.hash(btype).substr(0,16)+\n                this.hash(otype).substr(0,16)+\n                this.hash(idproof).substr(0,16)\n                console.log(address)\n    return address\n  }\n\n  getStateD(addre){\n    return this.http.get('http://localhost:4200/api/state/'+addre)\n\n  }\n\n  getTxnD(txnid){\n    return this.http.get('http://localhost:4200/api/transactions/'+txnid)\n  }\n\n\n\n}\n  \n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}